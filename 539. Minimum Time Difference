https://leetcode.com/problems/minimum-time-difference/description/




class Solution {
public:
    int findMinDifference(vector<string> &arr) {
        int n = arr.size();
        vector<int> v(n);   // minutes
        
        for (int i = 0; i < n; i++) {
            int hour = stoi(arr[i].substr(0, 2));
            int minutes = stoi(arr[i].substr(3));
            
            v[i] = hour * 60 + minutes;
        }

        sort(v.begin(), v.end());

        int mini = INT_MAX;
        for (int i = 0; i < n-1; i++) {
            mini = min(mini, v[i+1] - v[i]);
        }

        mini = min(mini, 24*60 - v.back() + v.front());

        return mini;
    }
};
