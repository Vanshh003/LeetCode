https://leetcode.com/problems/partition-equal-subset-sum/description/




class Solution {
public:
    bool subset_sum(vector<int> nums, int sum, int n) {
        bool dp[n+1][sum+1];

        for(int i=0; i<n+1; i++) {
            for(int j=0; j<sum+1; j++) {
                if(i==0) dp[i][j] = (j==0) ? true : false;
                else if(nums[i-1] <= j) dp[i][j] = dp[i-1][j-nums[i-1]] || dp[i-1][j];
                else dp[i][j] = dp[i-1][j]; 
            }
        }

        return dp[n][sum];
    }

    bool canPartition(vector<int>& nums) {
        int n = nums.size();
        int sum = 0;
        
        for(int i=0; i<n; i++) sum += nums[i];

        if(sum%2 != 0) return false;
        else return subset_sum(nums, sum/2, n);
    }
};
