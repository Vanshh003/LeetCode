https://leetcode.com/problems/minimum-window-substring/description/




class Solution {
public:
    string minWindow(string s, string t) {
        int n = s.size(); 
        int m = t.size();
       
        string ans = "";
        int max = INT_MAX;
        string x = "";
        
        if(n < m) return "";

        map<char, int> tmap;
        map<char, int> smap;

        int startind = 0;
        int have = 0;
        int needed = 0;
        int ind1 = 0;
        int ind2 = 0;

        int ans1 = -1;
        int ans2 = -1;

        for(auto i: t) {
            tmap[i]++;
            smap[i] = 0;
        }    

        for(auto i: tmap) needed += i.second;
        
        for(int i=0; i<n; i++) {
            if(smap.find(s[i]) != smap.end()) {
                smap[s[i]]++;
                
                if(smap[s[i]] <= tmap[s[i]]) have++;
            }

            while(have == needed) {
                if(smap.find(s[startind]) != smap.end()) {
                    if(smap[s[startind]] > 0) smap[s[startind]]--;
                    if(smap[s[startind]] < tmap[s[startind]]) have--;
                }

                ind1 = startind;
                ind2 = i;
                
                if(ind2-ind1+1 < max){
                    ans1 = ind1;
                    ans2 = ind2;
                    max = ind2-ind1+1;
                }

                startind++;
            }
        }   

        return (ans1 == -1) ? "" : s.substr(ans1, ans2-ans1+1);       
    }
};
