https://leetcode.com/problems/leaf-similar-trees/description/




/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void addleaf(TreeNode* root, vector<int> &res) {
        if(root == NULL) return;

        if(root->right == NULL && root->left == NULL) res.push_back(root->val);
        if(root->left != NULL) addleaf(root->left, res);
        if(root->right != NULL) addleaf(root->right, res);
    }

    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> res1;
        addleaf(root1, res1);

        vector<int> res2;
        addleaf(root2, res2);

        return (res1 == res2);    
    }
};
